package onboarding.hwang.login;

import java.io.PrintWriter;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import onboarding.hwang.login.model.HwangSessionVo;
import onboarding.hwang.login.model.HwangVo;




@Controller
@RequestMapping(value = "/hwang/user/")
public class HwangLoginCtrl {
	
	
	@Autowired
	private HwangLoginSvc hwangloginSvc;
	
	public static final String HWANG_SESSION =  "userinfo";
	public static final String HWANG_LOGIN_VIEW =  "/WEB-INF/classes/onboarding/hwang/login/view";

	
	//로그인 화면 
	@RequestMapping(value = "/loginView.dcp")
	public ModelAndView login(HttpServletRequest req, HttpServletResponse res, HttpSession session) throws Exception 
	{
		ModelAndView mv = new ModelAndView( HWANG_LOGIN_VIEW + "/login.empty_tiles" );
		
		session.invalidate();
		
		return mv; 
	}
	
	//회원가입 화면  
	@RequestMapping(value = "/join.dcp")
	public ModelAndView join(HttpServletRequest req, HttpServletResponse res, HttpSession session) throws Exception 
	{
		ModelAndView mv = new ModelAndView( HWANG_LOGIN_VIEW + "/join.empty_tiles" );
		
		session.invalidate();
		
		return mv; 
	}
	
	//회원가입 등록 
	@RequestMapping(value = "/joinAction.dcp" , method = RequestMethod.POST)
	public void joinAction(HttpServletRequest req, HttpServletResponse res , HwangVo vo ) throws Exception 
	{
		String result ="";
		int check = 0 ;
		String id = vo.getUser_id();
		
		check = hwangloginSvc.idCheck(id);
		
		if( check == 0 ) {
			//중복없으면 
			hwangloginSvc.insertJoin(vo);
		}else {
			result = "fail";
		}
		
		res.setContentType("text/html;charset=utf-8");
    	PrintWriter out = res.getWriter();

    	out.print(result);
	
	}
	
	//아이디 중복 체크 
	@RequestMapping(value = "/idcheckAction.dcp" )
	public void idCheck(HttpServletRequest req, HttpServletResponse res , @RequestParam("id") String id ) throws Exception 
	{	
		int result = 0;
		
		result = hwangloginSvc.idCheck(id);
		
    	res.setContentType("text/html;charset=utf-8");
    	PrintWriter out = res.getWriter();

    	out.print(result);
		
	}
	
	//로그인 하기 
	@RequestMapping(value = "/loginAction.dcp" )
	public String login(HttpServletRequest req, HttpServletResponse res , HwangVo vo) throws Exception 
	{	
		String url ="";
		
		HttpSession session = req.getSession(true);
		
		HwangSessionVo userinfo = hwangloginSvc.getuserInfo(vo);
		
		if(userinfo != null ) {
			session.setAttribute( HWANG_SESSION , userinfo );
			url = "redirect:/hwang/user/boardList.dcp" ;
		}else {
			url = "redirect:/hwang/main.dcp" ;
		}
		
		return url;
	}
	
	//게시판리스트 화면 
	@RequestMapping(value = "/boardList.dcp")
	public ModelAndView boardList(HttpServletRequest req, HttpServletResponse res, HttpSession session) throws Exception 
	{
		ModelAndView mv = new ModelAndView( HWANG_LOGIN_VIEW + "/boardList.empty_tiles" );
		
		HwangSessionVo sessionVo = (HwangSessionVo)session.getAttribute( HWANG_SESSION );
		
		if (session == null || !req.isRequestedSessionIdValid() || sessionVo == null ) {
			mv.addObject("msg", "로그인 필요합니다. 로그인 화면으로 이동합니다. ");
			mv.addObject("afterUrl", "/hwang/user/login.dcp");
			mv.setViewName( HWANG_LOGIN_VIEW + "/msgView.empty_tiles" );
		}else {
			sessionVo.setMenu("board"); // board 메뉴 값 주기 
		}
		
		mv.addObject("userinfo", sessionVo);
		
		return mv; 
	}
	
	//로그아웃 
	@RequestMapping(value = "/logOutAction.dcp" )
	public void logOutAction(HttpServletRequest req, HttpServletResponse res ,HttpSession session  ) throws Exception 
	{	
		String result ="1";
		
		session.invalidate(); //초기화 
	
    	res.setContentType("text/html;charset=utf-8");
    	PrintWriter out = res.getWriter();

    	out.print(result);
	}
	

	//게시판리스트 화면 
	@RequestMapping(value = "/findView.dcp")
	public ModelAndView findView(HttpServletRequest req, HttpServletResponse res, HttpSession session) throws Exception 
	{
		ModelAndView mv = new ModelAndView( HWANG_LOGIN_VIEW + "/findIDView.empty_tiles" );
		
		String findKey  = req.getParameter("findkey");
		
		if( null != findKey && ("password").equals(findKey) ) {
			mv.setViewName(HWANG_LOGIN_VIEW + "/findPasswordView.empty_tiles" );
		}
		
		return mv; 
	}
	
	//등록정보로 아이디 찾기 
	@RequestMapping(value = "/idFindkAction.dcp" , method = RequestMethod.POST)
	public void idFindkAction(HttpServletRequest req, HttpServletResponse res , HwangVo vo ) throws Exception 
	{
		Map<String, String> map = new HashMap<String,String>(); 
	
		
		vo = hwangloginSvc.selectFindID(vo);
		
		if( null == vo.getUser_id() || ("").equals(vo.getUser_id()) ){
		    map.put("msg","noFind");
		}else {
			map.put("msg","Find");
			map.put("ID",vo.getUser_id());
		}
		res.setContentType("text/html;charset=utf-8");
    	PrintWriter out = res.getWriter();
    
    	out.print(map);
	
	}

}


